apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  SPRING_DATASOURCE_URL: "jdbc:mysql://mysql-service:3306/madhu"
---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
type: Opaque
data:
  username: cm9vdA==  # Base64 encoded value of "root"
  password: cm9vdA==  # Base64 encoded value of "root"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springboot
  template:
    metadata:
      labels:
        app: springboot
    spec:
      containers:
        - name: springboot-app
          image: madhurinaidu/crud_operation:1.0  # Replace with your Docker image
          envFrom:
            - configMapRef:
                name: app-config  # Use the ConfigMap for environment variables
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials  # Secret is used for sensitive data
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  selector:
    app: springboot
  ports:
    - protocol: TCP
      port: 80       # Exposed port within the cluster
      targetPort: 8080  # Application's container port
      nodePort: 30080   # NodePort to expose externally
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "madhu"
          ports:
            - containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec: 
  ports:
    - port: 3306 
      targetPort: 3306
      nodePort: 30081   # NodePort to expose externally
  type: NodePort
  selector:
    app: db 

      
